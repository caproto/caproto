os: linux
language: python
dist: xenial

env:
  global:
    - EPICS_CA_MAX_ARRAY_BYTES=20000000
    # We don't have the motorSim IOC installed or running:
    - CAPROTO_SKIP_MOTORSIM_TESTS=1
    # Doctr deploy key for NSLS-II/caproto (not used)
    - secure: "Hnz9c6x13kaAc7IqH4/wJWNel2rzEC8/x0KhFoGLVLHjmiH1LMmpGh/P5CPADlmKS80WFz4vhJ0YtSjtHCPI+9Y2aBGn8z732WM86OyGHITviCMTxtyVZfRFCkOAVlU0qpIyWu4p0rEfxrXCztSKE4bBO/wWnFhGGw9CJROnFhJwoJlbI9i28zscyeGsdqHNUfXHkyUAN3c3LKoYZgnJco5HiHLwXVvsy3DMkvOizLgslf6lrHwnQOT1F49ShgPcGGWpkuRARXkGII7lB0LOn2TBoTzmhgjoC3OmC4nZGJfzitwH9+nHc+iJ3mTlshsXb366B/D5TNVIL/4rzYV8zw49DogQIWYtECK4/z7fOzG61yCU33b3aeXU2OI4k5eZ2qN3gp3KQ4+PWyCMTHsBVgs6o49K1HWtFuuFLuhUPT4FVs2Pzz6yTka9NUukPO1LoTeQAUvGxRbc/15CjIWXtqqzEGmlPi8AFEo2kw33EtTawMU9w8nzAfdk5DX28Qcuzh9XA9nVUD0j7Rum7nGY1f5+icXh0FsOuP1uHt82bXIYvw3rey3RkWcqVcniJXlkq0bAZM/ZSXWX5VHyQ2e7C4kxCdnzVqjgtlGT2ARSlD6o8FKKRKTAKD7kQ9ajTjZHRhO+xbvP+X4K9GlbGvPyU9bnDFa14fXBJS4dTMd8GgQ="
    # Doctr deploy key for NSLS-II/NSLS-II.github.io (for old URLs)
    - secure: "Pnqun4Pd3qH7P3hpCJ6qRS64CdQPGxBkPiFMVT5MYZaxK3UCENmERsUm+Onk7rqMvqAUooVp6cFWSta9/BvgJSXnp41sKJZMiK3UmRfvyGAx0Wg/jpkKKAxSUr5ke9OCh4a8LB2L1hHJVybS2QA7IbBfkx8uiKSSH803eg7dGDacW6jhMxEej6Ne7gGvMmRfthbbPqeTLTNLzLqRfXX1zxG9G7ywoY3HiaYe5Ti3gAsAo7BK56ApHSxUNX4c4rsalZVYaBz51zAG+oecJ1JnpTq+Ix6YE6cKIV3wvz79vYbzbvHhDNR6efZ3WaJfA0i07KhRLxgRRMUwxiPBGZdRqftUR8losgxhlUEcBecu/OsvIgRy12gGuP6dIjw8tN2YhmVtkFZWnnA9DwnYzkCFsIB/sPbmWfI7WVFblY+Ij6EFYySQQFcgw047cl/SbzSaN2DZjTKdyYiZA/gd5b2azC8trS6K2OXD2rgptERGa/qQqgEieVqWeJ2XHewZ5FZpuJBoT9wEF3/i/P8HpOFxob7lrTVx4gluiTlVTfmbnLmjdgyBOJ5Ch3YEsPzipS738NlIlXOhHfRztno5lnKSG4pARK4jnQd2E19NyJQLmcog6aux648N7X2O1Y+yOs7zyuqCm8nIHsf5c9LAV19KN+zJkHHRK3P8cR4ffVdZD8E="
    # Doctr deploy key for caproto/caproto.github.io
    - secure: "j6XZWU6sRp74RxbwDRf0vgTyp38xnyVsX+Upsh4D9DrltQ9evSskgYl94XOTN9LVawmJTXvwy8A2Tjcy/+4SMD/snhSP3y0WpwyunA4FQoG+jmS40QB0FlamnQkNgxPv8LjP6o0nl2ZN7QdTf1/ANy813cH6ZR9Vc3JRyyHew+z6qs2u2hDqUiDhqdVq6m+FOZQGzHEdiexowJOe2w6SOS2FfqDYWtrG0IEmykctUYiMFuDxHXbqaPuu68/GNjSqTXW3bdXX//LOE2H68XRDHvbW+lnidU4G6T3SqDyvJSAiwZfxKdjYQzjvQhTCrNCwNe99ORFlHmVU4rr19+VtL68Ta5ADfHHvkmM78zCb+OPV4N6Pv2mqbtpM1Qn9h920x3lH+5i0qoK8kVocrlmRokd4nY7jyGOTX0SyYKGnBL+KXrKsPSabLO2kyW6+eHc4p4eCopZDhEg5GyXw3g1dA5w3MhfCeEY/0N/7tRBGlooFbIK4rVj7KRJxS5if6B1TKlTgilRhFvMMGMxJG2fTVjAaqrbQqtiy6GwKfCWyNYfUcB6TUpyu7jgStrGJ9lsm5VrrJR7/atlJN4E1GA0HjBWoCUn1NgH+5upjvG9Z1s9FUdp4Kqohw/0gr0CQQwvjRxyZLGKLYDNgL1gY/eBYzTjxb8t3r5+ZKFjQmldg2qk="

jobs:
  include:
    - python: 3.7
      env: ID=FLAKE8
      name: Flake8 style check
    - env: INSTALL_NUMPY=0 PYTHON=3.6
      name: Python 3.6
    - env: INSTALL_NUMPY=0 PYTHON=3.7
      name: Python 3.7
    - env: INSTALL_NUMPY=1 PUBLISH_DOCS=1 PYTHON=3.7
      name: Python 3.7 with numpy + docs
    - env: INSTALL_NUMPY=0 PYTHON=3.8
      name: Python 3.8
    - env: INSTALL_NUMPY=0 PYTHON=3.9
      name: Python 3.9

addons:
  apt:
    packages:
      - graphviz  # for building docs
      - procserv

cache:
  files:
    - $HOME/.condarc
  directories:
    - $HOME/miniconda
    - $HOME/.condarc
    - $HOME/.cache/pip
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

before_install:
  - |
    if [ "$ID" == "FLAKE8" ]; then
        pip install flake8
        flake8 .
        exit
    fi

  - git fetch --unshallow
  - export PATH=/usr/lib/ccache:$PATH

  - |
    if [ -f $HOME/miniconda/bin/python ]; then
        source "$HOME/miniconda/etc/profile.d/conda.sh";
        hash -r;
        echo "Found cached miniconda";
    else
        rm -rf $HOME/miniconda $HOME/.condarc;
        echo "Installing miniconda"
        wget -nv https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        bash miniconda.sh -b -p $HOME/miniconda;
        source "$HOME/miniconda/etc/profile.d/conda.sh";
        hash -r;
        conda config --set always_yes yes --set changeps1 no;
        conda config --set channel_priority strict;
        conda config --add channels conda-forge;
        conda config --remove channels defaults;
    fi

  - conda info -a
  - conda create -q -n test_env python=$PYTHON epics-base
  - conda activate test_env

  - which softIoc || which softIocPVA

install:
  - pip install .[test]
  # This is necesary to actually upgrade the test requirements from the
  # Travis-CI defaults, which are old.
  - pip install --upgrade -r requirements-test.txt
  - |
    if [ ! $INSTALL_NUMPY ]
    then
      pip uninstall --yes numpy
    fi

script:
  # We want to test caproto-repeater later; don't use caRepeater
  - rm -f `which caRepeater` || true

  # Work around pip bug that fails to respect trio's pin of attrs.
  - pip install -U attrs

  - caproto-repeater &
  - coverage run --parallel-mode run_tests.py -v
  - coverage combine --append
  - coverage report -m
  - codecov

  # Install deps for building the docs.
  - |
    if [[ "$PUBLISH_DOCS" -eq 1 ]]; then
        set -e
        pip install --quiet --upgrade -r requirements-doc.txt
        # Build the docs.
        make -C doc html
    fi

  # Upload the docs to gh-pages.
  - |
    if [[ "$PUBLISH_DOCS" -eq 1 && ! -z "$DOCTR_DEPLOY_ENCRYPTION_KEY_NSLS_II_NSLS_II_GITHUB_IO" ]]; then

        # A fix for doctr-versions-menu:
        pip install pyparsing --upgrade
        DEPLOY_DIR="caproto/${TRAVIS_TAG:=master}"
        doctr deploy --command=doctr-versions-menu --build-tags --deploy-repo caproto/caproto.github.io --deploy-branch-name master ${DEPLOY_DIR}

        # Avoid updating /index.html in the NSLS-II/NSLS-II.github.io repo.
        # See https://goerz.github.io/doctr_versions_menu/v0.3.0/command.html#customizing-index-html
        # for details.
        export DOCTR_VERSIONS_MENU_WRITE_INDEX_HTML=false
        doctr deploy --command=doctr-versions-menu --build-tags --deploy-repo NSLS-II/NSLS-II.github.io --deploy-branch-name master ${DEPLOY_DIR}
    fi
