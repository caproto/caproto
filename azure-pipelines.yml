# vi: sw=2 ts=2 sts=2 expandtab

jobs:

- job: 'Test'
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      Python 3.6:
        python.version: '3.6'
      Python 3.7:
        python.version: '3.7'
      Python 3.8:
        python.version: '3.8'
      Python 3.9:
        python.version: '3.9'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - bash: |
      git submodule update --init --recursive
    displayName: 'Checkout submodules'

  - bash: |
      pushd /home
      sudo ln -sf $USER travis
      ls -la /home
      popd
    displayName: 'Pretend azure is travis'

  - bash: |
      /sbin/ifconfig
      ip addr
      env
      pwd
      cp .ci/azure_env.sh $HOME
    displayName: 'Configure the environment'

  - bash: |
      wget -nv https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      bash miniconda.sh -b -p $HOME/miniconda
    displayName: 'Install conda'

  - bash: |
      source "$HOME/miniconda/etc/profile.d/conda.sh"
      hash -r
      conda config --set always_yes yes --set changeps1 no
      conda config --set channel_priority strict
      conda config --add channels conda-forge
      conda config --remove channels defaults
    displayName: 'Configure conda'

  - bash: |
      source "$HOME/miniconda/etc/profile.d/conda.sh"
      hash -r
      conda info -a
      conda create -q -n test_env python=${PYTHON_VERSION} epics-base
    displayName: 'Create test environment'

  - bash: |
      source $HOME/azure_env.sh
      python -m pip install --upgrade pip

      python -m pip install .[test]
      python -m pip install -Ur requirements-test.txt
      # python -m pip install --quiet --upgrade cython
    displayName: 'Install caproto'

  - bash: |
      source $HOME/azure_env.sh
      python -c "from caproto.tests.conftest import run_example_ioc; run_example_ioc('caproto.ioc_examples.simple', request=None, args=['--prefix', 'azure_test:', '--async-lib', 'trio'], pv_to_check='azure_test:A')"
      sleep 2
      caproto-get -vvv azure_test:A
      caget azure_test:pi
      sleep 2
      killall python
    displayName: 'simple caproto IOC test'

  - bash: |
      source $HOME/azure_env.sh
      coverage run --parallel-mode run_tests.py --timeout=100 -v --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - bash: |
      source $HOME/azure_env.sh
      coverage combine --append
      coverage report -m
    displayName: 'Report coverage'

  - bash: |
      source $HOME/azure_env.sh
      if [ -f junit/test-results.xml ]; then
        python caproto/tests/view_leaks.py junit/test-results.xml
      fi
    displayName: 'Debug leaks'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Publish'
  dependsOn: 'Test'
  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  - script: python setup.py sdist
    displayName: 'Build sdist'
